{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class LoginService {\n  setIsLoggedIn(data) {\n    this.isLoggedIn.next(data);\n  }\n  getIsLoggedIn() {\n    return this.isLoggedIn.asObservable();\n  }\n  constructor() {\n    this.isLoggedIn = new BehaviorSubject(false);\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)();\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,YAAY;EAEvBC,aAAa,CAACC,IAAa;IACzB,IAAI,CAACC,UAAU,CAACC,IAAI,CAACF,IAAI,CAAC;EAC5B;EACAG,aAAa;IACX,OAAO,IAAI,CAACF,UAAU,CAACG,YAAY,EAAE;EACvC;EACAC;IAPO,eAAU,GAAyB,IAAIR,eAAe,CAAU,KAAK,CAAC;EAO9D;;AARJC,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAQ,SAAZR,YAAY;EAAAS,YAFX;AAAM","names":["BehaviorSubject","LoginService","setIsLoggedIn","data","isLoggedIn","next","getIsLoggedIn","asObservable","constructor","factory","providedIn"],"sourceRoot":"","sources":["/Volumes/Development/ProjectManagement/src/app/service/login-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  public isLoggedIn: BehaviorSubject<any> = new BehaviorSubject<boolean>(false);\n  setIsLoggedIn(data: boolean) {\n    this.isLoggedIn.next(data);\n  }\n  getIsLoggedIn() {\n    return this.isLoggedIn.asObservable();\n  }\n  constructor() {}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}